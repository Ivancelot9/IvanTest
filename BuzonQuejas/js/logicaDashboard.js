// Seleccionar botones y secciones
const botones = document.querySelectorAll(".sidebar a");
const secciones = document.querySelectorAll(".main-content .content");

// Funci√≥n para mostrar una secci√≥n y ocultar las dem√°s
function mostrarSeccion(idSeccion) {
    // Ocultar todas las secciones
    secciones.forEach((seccion) => {
        seccion.style.display = "none";
    });

    // Mostrar la secci√≥n seleccionada
    const seccionActiva = document.getElementById(idSeccion);
    seccionActiva.style.display = "block";

    // Cambiar el estilo del bot√≥n activo
    botones.forEach((boton) => boton.classList.remove("active"));
    const botonActivo = document.querySelector(`#btn-${idSeccion}`);
    botonActivo.classList.add("active");
}

// Mostrar la secci√≥n inicial por defecto
mostrarSeccion("datos-personales");

// Agregar eventos de clic a los botones
botones.forEach((boton) => {
    boton.addEventListener("click", (e) => {
        e.preventDefault(); // Prevenir comportamiento predeterminado del enlace
        const idSeccion = boton.id.replace("btn-", ""); // Obtener el ID de la secci√≥n
        mostrarSeccion(idSeccion);
    });
});


document.addEventListener("DOMContentLoaded", function () {
    const sidebar = document.querySelector(".sidebar");
    const mainContent = document.querySelector(".main-content");
    const toggleBtn = document.getElementById("toggleSidebar");
    const hero = document.querySelector(".hero-animation");

    toggleBtn.addEventListener("click", function () {
        // Forzar reinicio de la animaci√≥n eliminando todas las clases activas antes de iniciar
        hero.classList.remove("hero-fly-left", "hero-fly-left-end", "hero-fly-right", "hero-fly-right-end");
        void hero.offsetWidth; // üî• Truco para reiniciar la animaci√≥n correctamente

        if (sidebar.classList.contains("hidden")) {
            // üü¢ Mostrar sidebar y hacer que el superh√©roe vuele a la derecha
            hero.style.opacity = "1";
            hero.classList.add("hero-fly-right");

            setTimeout(() => {
                hero.classList.add("hero-fly-right-end");
            }, 100);

            sidebar.classList.remove("hidden");
            mainContent.classList.remove("expanded");

            setTimeout(() => {
                hero.style.opacity = "0";
            }, 1500);

            // üîπ Ajustar el bot√≥n cuando la sidebar est√° visible
            toggleBtn.style.left = "16px"; // Bot√≥n en la esquina izquierda
            toggleBtn.style.top = "16px";
            toggleBtn.innerHTML = "‚ò∞"; // Icono de men√∫

        } else {
            // üîµ Ocultar sidebar y hacer que el superh√©roe vuele a la izquierda
            hero.style.opacity = "1";
            hero.classList.add("hero-fly-left");

            setTimeout(() => {
                hero.classList.add("hero-fly-left-end");
            }, 100);

            setTimeout(() => {
                sidebar.classList.add("hidden");
                mainContent.classList.add("expanded");
            }, 200);

            setTimeout(() => {
                hero.style.opacity = "0";
            }, 1500);

            // üîπ Ajustar el bot√≥n cuando la sidebar est√° oculta
            toggleBtn.style.left = "350px"; // Mueve el bot√≥n a la derecha
            toggleBtn.innerHTML = "‚ùØ"; // Cambia el √≠cono a una flecha
        }
    });


    // üî¥ Funcionalidad para el bot√≥n de Cerrar Sesi√≥n
    const btnCerrarSesion = document.getElementById("btn-cerrar-sesion");

    if (btnCerrarSesion) {
        btnCerrarSesion.addEventListener("click", function (e) {
            e.preventDefault(); // Evita que recargue la p√°gina

            // üî• Aqu√≠ podr√≠as agregar l√≥gica para eliminar la sesi√≥n del usuario
            alert("Cerrando sesi√≥n...");

            // Redirigir a la p√°gina de login o inicio
            window.location.href = "index.php"; // Cambia esto por tu p√°gina de login
        });
    }


});

